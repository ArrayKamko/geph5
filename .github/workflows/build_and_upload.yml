name: Build and Upload

on: [push]

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install musl-tools
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: armv7-unknown-linux-musleabihf

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-armv7-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-armv7-cargo-

      - name: Install cross
        run: cargo install cross --locked

      - name: Install UPX and binutils
        run: sudo apt-get update && sudo apt-get install -y upx-ucl binutils

      - name: Build client
        run: cross build --locked --release --target armv7-unknown-linux-musleabihf --manifest-path binaries/geph5-client/Cargo.toml

      - name: Optimize binary
        run: |
          strip target/armv7-unknown-linux-musleabihf/release/geph5-client
          upx --best target/armv7-unknown-linux-musleabihf/release/geph5-client

      - name: Move client binaries to artifacts directory
        shell: bash
        run: |
          mkdir -p artifacts/musl-armv7
          mv target/armv7-unknown-linux-musleabihf/release/geph5-client artifacts/musl-armv7/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: musl-armv7-latest
          path: artifacts/musl-armv7

  upload:
    if: github.ref == 'refs/heads/master'
    needs: [build]
    runs-on: ubuntu-24.04

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Cache rclone
        uses: actions/cache@v3
        id: cache-rclone
        with:
          path: /usr/bin/rclone
          key: rclone-latest

      - name: Install rclone
        if: steps.cache-rclone.outputs.cache-hit != 'true'
        run: |
          curl https://rclone.org/install.sh | sudo bash

      - name: Configure rclone
        run: |
          mkdir -p ~/.config/rclone
          cat > ~/.config/rclone/rclone.conf << EOF
          [r2]
          type = s3
          provider = Cloudflare
          access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region = auto
          endpoint = https://b5e397a549f0e6543dba8e1d83ca9924.r2.cloudflarestorage.com
          acl = private
          EOF

      - name: Upload to Cloudflare R2
        run: |
          rclone copy -P ./artifacts/ r2:geph5/
